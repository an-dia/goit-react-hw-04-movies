{"version":3,"sources":["pages/MovieDetailsPage.module.css","component/MoviePreview/MoviePreview.module.css","pages/cat-cry.jpg","component/MoviePreview/MoviePreview.js","pages/MovieDetailsPage.js","servises/tmdb-api.js","component/Loader/index.js"],"names":["module","exports","MoviePreview","poster_path","title","name","release_date","vote_average","overview","genres","className","s","Container","Img","src","defaultImg","alt","width","Wrapper","Wrap","Title","TitleData","slice","SubTitle","Text","List","map","id","Item","defaultProps","Cast","lazy","Reviews","MovieDetailsPage","state","isLoaded","error","handleGoBack","props","location","history","push","from","routes","home","movieId","this","match","params","api","getMovieDetails","then","data","setState","movies","length","Promise","reject","Error","catch","finally","Button","type","onClick","style","marginRight","message","Loader","LinkBase","activeClassName","LinkActive","to","url","fallback","path","component","Component","axios","defaults","baseURL","api_key","language","page","include_adult","getTrendingMovies","a","get","console","log","getSearchMovies","query","getCasts","cast","getReviews","reviews"],"mappings":"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","file":"static/js/movie-details-page.72a23aef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"MovieDetailsPage_Container__22Qsi\",\"Wrapper\":\"MovieDetailsPage_Wrapper__3fJ2t\",\"List\":\"MovieDetailsPage_List__vD1I2\",\"Title\":\"MovieDetailsPage_Title__1R--z\",\"Button\":\"MovieDetailsPage_Button__14mwB\",\"LinkBase\":\"MovieDetailsPage_LinkBase__us7iL\",\"LinkActive\":\"MovieDetailsPage_LinkActive__2Otd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"MoviePreview_Container__3nBJL\",\"Wrapper\":\"MoviePreview_Wrapper__WsqNG\",\"Wrap\":\"MoviePreview_Wrap__2B2zo\",\"Title\":\"MoviePreview_Title__32LbT\",\"TitleData\":\"MoviePreview_TitleData__1hQbI\",\"SubTitle\":\"MoviePreview_SubTitle__1gH7c\",\"Text\":\"MoviePreview_Text__2wT5r\",\"List\":\"MoviePreview_List__hiPw5\",\"Item\":\"MoviePreview_Item__3U2zW\",\"Img\":\"MoviePreview_Img__1zk9P\"};","export default __webpack_public_path__ + \"static/media/cat-cry.1752189b.jpg\";","import PropTypes from 'prop-types';\r\nimport s from './MoviePreview.module.css';\r\nimport defaultImg from '../../pages/cat-cry.jpg';\r\n\r\nconst MoviePreview = ({ poster_path, title, name, release_date, vote_average, overview, genres }) => {\r\n  // console.log('genres', genres);\r\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w300'\r\n  return (\r\n    <div className={s.Container}>\r\n        <img className={s.Img}  src={poster_path ? `${baseImgUrl}${poster_path}` : defaultImg} alt={title ? title : name} width='300'/>\r\n      <div className={s.Wrapper}>\r\n        <div className={s.Wrap}>\r\n          <h1 className={s.Title}>{title ? title : name}</h1>\r\n          <p className={s.TitleData}>({release_date.slice(0,4)})</p>\r\n        </div>\r\n        <h2 className={s.SubTitle}>User Score:</h2>\r\n        <p className={s.Text}>{vote_average * 10}%</p>\r\n        <h3 className={s.SubTitle}>Overview</h3>\r\n        <p className={s.Text}>{overview}</p>\r\n        <h3 className={s.SubTitle}>Genres</h3>\r\n        <ul className={s.List}>{genres.map(({ id, name }) => (<li className={s.Item} key={id}>{ name }</li>))}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoviePreview.defaultProps = {\r\n  overview: 'Sorry, there is no description for this movie yet.',\r\n\r\n};\r\n\r\nMoviePreview.propTypes = {\r\n  poster_path: PropTypes.string,\r\n  title: PropTypes.string,\r\n  name: PropTypes.string,\r\n  vote_average: PropTypes.number,\r\n  overview: PropTypes.string,\r\n  release_date: PropTypes.string,\r\n  genres: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n      }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default MoviePreview;\r\n\r\n","import { Component, Suspense, lazy } from 'react';\r\nimport { NavLink, Route, Switch } from 'react-router-dom';\r\nimport { ImArrowLeft } from 'react-icons/im';\r\nimport s from './MovieDetailsPage.module.css';\r\nimport api from '../servises/tmdb-api';\r\nimport LoaderSpinner from '../component/Loader';\r\n// import axios from 'axios';\r\nimport routes from '../routes';\r\n// import Cast from '../component/Cast';\r\n// import Reviews from '../component/Reviews';\r\nimport MoviePreview from '../component/MoviePreview';\r\n\r\nconst Cast = lazy(() => import('../component/Cast' /* webpackChunkName: \"cast\" */));\r\nconst Reviews = lazy(() => import('../component/Reviews' /* webpackChunkName: \"reviews\" */));\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n\r\n  state = {\r\n    poster_path: null,\r\n    title: null,\r\n    name: null,\r\n    release_date: '',\r\n    vote_average: null,\r\n    overview: null,\r\n    genres: [],\r\n    id: null,\r\n    isLoaded: false,\r\n    error: null,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    // console.log('mi',movieId);\r\n    api.getMovieDetails(movieId)\r\n      .then((data) => {\r\n      // console.log('dataMD', data);\r\n        this.setState({ isLoaded: true })\r\n         \r\n         if (data.movies.length === 0) {\r\n           return Promise.reject(new Error('Not found'));\r\n         }\r\n         \r\n         this.setState({ ...data.movies })\r\n       })\r\n      .catch(error => this.setState({ error }))\r\n      .finally (this.setState({ isLoaded: false, }))\r\n\r\n    // const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=8e1b01f3d4ab71ddc5b71444dcf769fc&language=en-US`)\r\n    // // console.log(response.data);\r\n\r\n    // this.setState({...response.data})\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n    //Старый способ\r\n    // if(location.state && location.state.from){\r\n    //   return history.push(location.state.from);\r\n    // }\r\n    // history.push(routes.home)\r\n\r\n    history.push(location?.state?.from || routes.home)\r\n  }\r\n\r\n  render() {\r\n    // console.log('location',location.state.from);\r\n    // const { movieId } = this.props.match.params;\r\n    // console.log(this.props.match.path);\r\n    // poster_path, title, name, vote_average, overview, genres, \r\n    \r\n    const { poster_path, title, name, release_date, vote_average, overview, genres, error, isLoaded } = this.state;\r\n    // console.log('genresMD', genres);\r\n    return (\r\n      <div className={s.Container}>\r\n        <button className={s.Button} type='button' onClick={this.handleGoBack}>\r\n          <ImArrowLeft style={{marginRight: 8}}/>\r\n          Go back</button>\r\n        {error && <h1>{error.message}</h1>}\r\n        {!isLoaded && <LoaderSpinner />}\r\n        {!error &&\r\n              <MoviePreview\r\n                poster_path={poster_path}\r\n                title={title}\r\n                name={name}\r\n                release_date={release_date}\r\n                vote_average={vote_average}\r\n                overview={overview}\r\n                genres={genres}\r\n              />\r\n        }\r\n        {genres.length > 0  && \r\n        <div className={s.Wrapper}>\r\n          <h2 className={s.Title}>Additional information</h2>\r\n          <ul  className={s.List}>\r\n            <li> <NavLink className={s.LinkBase} activeClassName={s.LinkActive} to = {`${this.props.match.url}/cast `}>Cast</NavLink> </li>\r\n            <li> <NavLink className={s.LinkBase} activeClassName={s.LinkActive} to = {`${this.props.match.url}/reviews `}>Reviews</NavLink> </li>\r\n          </ul>\r\n          <Suspense fallback={<LoaderSpinner />}>\r\n            <Switch>\r\n              <Route path={`${this.props.match.path}/cast `}  component={Cast} />\r\n              <Route path={`${this.props.match.path}/reviews `} component={Reviews}/>\r\n            </Switch>\r\n          </Suspense>\r\n        </div>}\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n// /movies/:movieId/cast \r\n// /movies/:movieId/reviews\r\n\r\n// {/* <h1>{title ? title : name}</h1> */}\r\n         \r\n// {/* <img src={`https://image.tmdb.org/t/p/w300${poster_path}` ?? this.props.defaultImg} alt={title ? title : name} width='300'/>\r\n        \r\n//     <h2>User Score:</h2>\r\n//     <p>{vote_average * 10}%</p>\r\n//     <h3>Overview</h3>\r\n//     <p>{overview}</p>\r\n//     <h3>Genres</h3> */}\r\n// {/* <ul>{genres.map(({ id, name }) => (<li key={id}>{ name}</li>))}</ul> */}","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst KEY = '8e1b01f3d4ab71ddc5b71444dcf769fc';\r\n// `https://api.themoviedb.org/3/trending/all/day?api_key=8e1b01f3d4ab71ddc5b71444dcf769fc`\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: KEY,\r\n  language: 'en-US',\r\n  page: 1,\r\n  include_adult: false,\r\n}\r\n\r\nconst getTrendingMovies = async () => {\r\n  try {\r\n    const { data } = await axios.get('trending/all/day')\r\n    // console.log('data', data);\r\n    // test();\r\n    return {\r\n      movies: data,\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      movies: [],\r\n    }\r\n  }\r\n}\r\n\r\n// `https://api.themoviedb.org/3/search/movie?api_key=8e1b01f3d4ab71ddc5b71444dcf769fc&language=en-US&query=${query}&page=1&include_adult=false`\r\n\r\nconst getSearchMovies = async (query) => {\r\n  try {\r\n    const { data } = await axios.get('search/movie', {\r\n      params: {query}\r\n    })\r\n    // console.log('dataS', data);\r\n    // test();\r\n    return {\r\n      movies: data,\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      movies: [],\r\n      query: '',\r\n    }\r\n  }\r\n}\r\n\r\n// `https://api.themoviedb.org/3/movie/${movieId}?api_key=8e1b01f3d4ab71ddc5b71444dcf769fc&language=en-US`\r\n\r\nconst getMovieDetails = async (movieId) => {\r\n  try {\r\n    const  { data } = await axios.get(`movie/${movieId}`)\r\n    // console.log('dataS', data);\r\n    // test();\r\n    return {\r\n      movies: data,\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      movies: [],\r\n      // movieId: '',\r\n    }\r\n  }\r\n}\r\n\r\n// `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=8e1b01f3d4ab71ddc5b71444dcf769fc&language=en-US`\r\n\r\nconst getCasts = async (movieId) => {\r\n  try {\r\n    const  { data } = await axios.get(`movie/${movieId}/credits`)\r\n    // console.log('dataS', data);\r\n    // test();\r\n    return {\r\n      cast: data,\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      cast: [],\r\n      // movieId: '',\r\n    }\r\n  }\r\n}\r\n\r\n// `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8e1b01f3d4ab71ddc5b71444dcf769fc&language=en-US&page=1`\r\n\r\nconst getReviews = async (movieId) => {\r\n  try {\r\n    const  { data } = await axios.get(`movie/${movieId}/reviews`)\r\n    // console.log('dataS', data);\r\n    // test();\r\n    return {\r\n      reviews: data,\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    return {\r\n      reviews: [],\r\n      // movieId: '',\r\n    }\r\n  }\r\n}\r\n\r\nconst api = {\r\n  getTrendingMovies,\r\n  getSearchMovies,\r\n  getMovieDetails,\r\n  getCasts,\r\n  getReviews,\r\n}\r\n\r\nexport default api;","export { default } from './LoaderSpinner';"],"sourceRoot":""}
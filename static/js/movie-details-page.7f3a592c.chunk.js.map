{"version":3,"sources":["pages/cat-cry.jpg","component/Cast/Cast.js","component/Reviews/Reviews.js","component/MoviePreview/MoviePreview.js","pages/MovieDetailsPage.js"],"names":["Cast","state","cast","movieId","this","props","match","params","axios","get","response","setState","data","console","log","map","id","name","character","profile_path","src","defaultImg","alt","width","Component","defaultProps","Reviews","reviews","results","length","author","content","MoviePreview","poster_path","title","vote_average","overview","genres","MovieDetailsPage","handleGoBack","location","history","push","from","routes","home","type","onClick","style","marginRight","to","url","path","component"],"mappings":"4TAAe,MAA0B,oCCIpBA,E,4MAKnBC,MAAQ,CACNC,KAAM,I,2LAIGC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,Q,SACcK,IAAMC,IAAN,6CAAgDN,EAAhD,qE,OAAjBO,E,OAGNN,KAAKO,SAAS,CAACT,KAAMQ,EAASE,KAAKV,O,qIAG3B,IACAA,EAASE,KAAKH,MAAdC,KAER,OADAW,QAAQC,IAAIZ,GAEV,mCACGA,GACD,6BACGA,EAAKa,KAAI,kBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,+BACA,qBAAKC,IAAG,mDAAoCD,UAApC,QAAsDE,EAAYC,IAAKpB,EAAKe,KAAMM,MAAM,QAChG,6CAAgBN,KAChB,4CAAeC,OAHNF,c,GAzBaQ,aAAbxB,EACZyB,aAAe,CACpBJ,WAAYA,G,ICHKK,E,4MAEnBzB,MAAQ,CACN0B,QAAS,I,2LAIAxB,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,Q,SACcK,IAAMC,IAAN,6CAAgDN,EAAhD,4E,OAAjBO,E,OAGNN,KAAKO,SAAS,CAACgB,QAASjB,EAASE,KAAKgB,U,qIAG9B,IACAD,EAAYvB,KAAKH,MAAjB0B,QAER,OACE,qCACGA,EAAQE,OAAS,GAChB,6BACGF,EAAQZ,KAAI,gBAAGe,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASf,EAApB,EAAoBA,GAApB,OACX,+BACE,0CAAac,KACb,4BAAIC,MAFGf,QAMK,IAAnBW,EAAQE,QAAgB,gF,GA5BIL,aCkBtBQ,EAlBM,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,YAAaC,EAAkD,EAAlDA,MAAOjB,EAA2C,EAA3CA,KAAMkB,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAExE,OACI,gCACI,qBAAKjB,IAAKa,EAAW,UAHV,mCAGU,OAAmBA,GAAgBZ,EAAYC,IAAKY,GAAgBjB,EAAMM,MAAM,QACvG,gCACE,6BAAKW,GAAgBjB,IACrB,6CACA,8BAAmB,GAAfkB,EAAJ,OACA,0CACA,4BAAIC,IACJ,2CAEJ,6BAAKC,EAAOtB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAmB,6BAAeA,GAAND,YCL7BsB,E,4MAKnBrC,MAAQ,CACNgC,YAAa,KACbC,MAAO,KACPjB,KAAM,KACNkB,aAAc,KACdC,SAAU,KACVC,OAAQ,GACRrB,GAAI,M,EAeNuB,aAAe,WAAO,IAAD,IACW,EAAKlC,MAA3BmC,EADW,EACXA,SADW,EACDC,QAOVC,MAAa,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAUvC,aAAV,eAAiB0C,OAAQC,IAAOC,O,2LAjBrC1C,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,Q,SAGeK,IAAMC,IAAN,6CAAgDN,EAAhD,6D,OAAjBO,E,OAGNN,KAAKO,SAAL,eAAkBD,EAASE,O,qIAcpB,MAI8DR,KAAKH,MAAlEgC,EAJD,EAICA,YAAaC,EAJd,EAIcA,MAAOjB,EAJrB,EAIqBA,KAAMkB,EAJ3B,EAI2BA,aAAcC,EAJzC,EAIyCA,SAAUC,EAJnD,EAImDA,OAC1D,OACE,qCACE,yBAAQS,KAAK,SAASC,QAAS3C,KAAKmC,aAApC,UACE,cAAC,IAAD,CAAaS,MAAO,CAACC,YAAa,KADpC,aAIA,8BACE,8BACE,cAAC,EAAD,CACEhB,YAAaA,EACbC,MAAOA,EACPjB,KAAMA,EACNkB,aAAcA,EACdC,SAAUA,EACVC,OAAQA,QAcd,gCACE,wDACA,+BACE,mCAAK,cAAC,IAAD,CAASa,GAAE,UAAO9C,KAAKC,MAAMC,MAAM6C,IAAxB,UAAX,kBAAL,OACA,mCAAK,cAAC,IAAD,CAASD,GAAE,UAAO9C,KAAKC,MAAMC,MAAM6C,IAAxB,aAAX,qBAAL,UAEF,cAAC,IAAD,CAAOC,KAAI,UAAKhD,KAAKC,MAAMC,MAAM8C,KAAtB,UAAqCC,UAAWrD,IAC3D,cAAC,IAAD,CAAOoD,KAAI,UAAKhD,KAAKC,MAAMC,MAAM8C,KAAtB,aAAuCC,UAAW3B,c,GA9EzBF","file":"static/js/movie-details-page.7f3a592c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cat-cry.1752189b.jpg\";","import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport defaultImg from '../../pages/cat-cry.jpg';\r\n\r\nexport default class Cast extends Component {\r\n  static defaultProps = {\r\n    defaultImg: defaultImg,\r\n  };\r\n\r\n  state = {\r\n    cast: [],\r\n  }\r\n\r\n  async componentDidMount() {\r\n     const { movieId } = this.props.match.params;\r\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=8e1b01f3d4ab71ddc5b71444dcf769fc&language=en-US`)\r\n    // console.log(response.data.cast);\r\n    \r\n    this.setState({cast: response.data.cast})\r\n  }\r\n  \r\n  render() {\r\n    const { cast } = this.state;\r\n    console.log(cast);\r\n    return (\r\n      <>\r\n        {cast &&  \r\n        <ul>\r\n          {cast.map(({ id, name, character, profile_path }) =>\r\n            <li key={id}>\r\n            <img src={`https://image.tmdb.org/t/p/w300${profile_path}` ?? defaultImg} alt={cast.name} width='150' /> \r\n            <p>Actor name: {name}</p>\r\n            <p>Character: {character}</p>\r\n          </li>)}\r\n          </ul>\r\n        }\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n// {this.props.match.url}","import { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Reviews extends Component {\r\n  \r\n  state = {\r\n    reviews: [],\r\n  }\r\n\r\n  async componentDidMount() {\r\n     const { movieId } = this.props.match.params;\r\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8e1b01f3d4ab71ddc5b71444dcf769fc&language=en-US&page=1`)\r\n    // console.log(response.data.results);\r\n    \r\n    this.setState({reviews: response.data.results})\r\n  }\r\n  \r\n  render() {\r\n    const { reviews } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {reviews.length > 0 &&\r\n          <ul>\r\n            {reviews.map(({ author, content, id }) =>\r\n              <li key={id}>\r\n                <h2>Author: {author}</h2>\r\n                <p>{content}</p>\r\n              </li>)}\r\n          </ul>  \r\n        }\r\n        {reviews.length === 0 && <p>We don't have any reviews for this movie</p>}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport defaultImg from '../../pages/cat-cry.jpg';\r\n\r\nconst MoviePreview = ({ poster_path, title, name, vote_average, overview, genres }) => {\r\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w300'\r\n  return (\r\n      <div>\r\n          <img src={poster_path ? `${baseImgUrl}${poster_path}` : defaultImg} alt={title ? title : name} width='300'/>\r\n        <div>\r\n          <h1>{title ? title : name}</h1>\r\n          <h2>User Score:</h2>\r\n          <p>{vote_average * 10}%</p>\r\n          <h3>Overview</h3>\r\n          <p>{overview}</p>\r\n          <h3>Genres</h3>\r\n      </div>\r\n      <ul>{genres.map(({ id, name }) => (<li key={id}>{ name}</li>))}</ul>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default MoviePreview;","import { Component } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport { ImArrowLeft } from 'react-icons/im';\r\nimport axios from 'axios';\r\nimport routes from '../routes';\r\nimport Cast from '../component/Cast';\r\nimport Reviews from '../component/Reviews';\r\n// import defaultImg from './cat-cry.jpg';\r\nimport MoviePreview from '../component/MoviePreview';\r\n\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  // static defaultProps = {\r\n  //   defaultImg: defaultImg,\r\n  // };\r\n\r\n  state = {\r\n    poster_path: null,\r\n    title: null,\r\n    name: null,\r\n    vote_average: null,\r\n    overview: null,\r\n    genres: [],\r\n    id: null,\r\n    // loading: false,\r\n    // error: null,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    // console.log('mi',movieId);\r\n\r\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=8e1b01f3d4ab71ddc5b71444dcf769fc&language=en-US`)\r\n    // console.log(response.data);\r\n\r\n    this.setState({...response.data})\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n    //Старый способ\r\n    // if(location.state && location.state.from){\r\n    //   return history.push(location.state.from);\r\n    // }\r\n    // history.push(routes.home)\r\n\r\n    history.push(location?.state?.from || routes.home)\r\n  }\r\n\r\n  render() {\r\n    // console.log('location',location.state.from);\r\n    // const { movieId } = this.props.match.params;\r\n    // console.log(this.props.match.path);\r\n    const { poster_path, title, name, vote_average, overview, genres } = this.state\r\n    return (\r\n      <>\r\n        <button type='button' onClick={this.handleGoBack}>\r\n          <ImArrowLeft style={{marginRight: 8}}/>\r\n          Go back</button>\r\n        \r\n        <div>\r\n          <div> \r\n            <MoviePreview\r\n              poster_path={poster_path}\r\n              title={title}\r\n              name={name}\r\n              vote_average={vote_average}\r\n              overview={overview}\r\n              genres={genres}\r\n            />\r\n          {/* <h1>{title ? title : name}</h1> */}\r\n         \r\n        {/* <img src={`https://image.tmdb.org/t/p/w300${poster_path}` ?? this.props.defaultImg} alt={title ? title : name} width='300'/>\r\n        \r\n          <h2>User Score:</h2>\r\n          <p>{vote_average * 10}%</p>\r\n          <h3>Overview</h3>\r\n          <p>{overview}</p>\r\n          <h3>Genres</h3> */}\r\n          {/* <ul>{genres.map(({ id, name }) => (<li key={id}>{ name}</li>))}</ul> */}\r\n        </div>\r\n        </div>\r\n        <div>\r\n          <h2>Additional information</h2>\r\n          <ul>\r\n            <li> <NavLink to = {`${this.props.match.url}/cast `}>Cast</NavLink> </li>\r\n            <li> <NavLink to = {`${this.props.match.url}/reviews `}>Reviews</NavLink> </li>\r\n          </ul>\r\n          <Route path={`${this.props.match.path}/cast `}  component={Cast} />\r\n          <Route path={`${this.props.match.path}/reviews `} component={Reviews}/>\r\n        </div>\r\n      </>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n// /movies/:movieId/cast \r\n// /movies/:movieId/reviews"],"sourceRoot":""}
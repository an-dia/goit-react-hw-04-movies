{"version":3,"sources":["pages/HomePage.js","component/MoviesList/MoviesList.js"],"names":["HomePage","state","movies","axios","get","response","this","setState","data","results","Component","withRouter","location","map","movie","to","pathname","id","from","title","name"],"mappings":"6RAKqBA,E,4MACnBC,MAAQ,CACNC,OAAQ,I,kMAIeC,IAAMC,IAAN,0F,OAAjBC,E,OAGNC,KAAKC,SAAS,CAACL,OAAQG,EAASG,KAAKC,U,qIAG7B,IACAP,EAAWI,KAAKL,MAAhBC,OAER,OACE,qCACE,gDACA,cAAC,IAAD,CAAYA,OAAQA,W,GAlBUQ,c,mGCoBvBC,eArBI,SAAC,GAA0B,IAAxBT,EAAuB,EAAvBA,OAAQU,EAAe,EAAfA,SAE5B,OACM,6BACGV,EAAOW,KAAI,SAAAC,GAAK,OACf,6BAEE,cAAC,IAAD,CAAMC,GAAI,CACRC,SAAS,WAAD,OAAaF,EAAMG,IAC3BhB,MAAO,CACLiB,KAAMN,IAHV,SAMGE,EAAMK,MAAQL,EAAMK,MAAQL,EAAMM,QAR9BN,EAAMG","file":"static/js/home-page.b4ab359d.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport axios from 'axios';\r\n// import { Link } from 'react-router-dom';\r\nimport MoviesList from '../component/MoviesList';\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const response = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=8e1b01f3d4ab71ddc5b71444dcf769fc`)\r\n    // console.log(response.data.results);\r\n    \r\n    this.setState({movies: response.data.results})\r\n  }\r\n  \r\n  render() {\r\n    const { movies } = this.state;\r\n    \r\n    return (\r\n      <>\r\n        <h1>Trending Today</h1>\r\n        <MoviesList movies={movies}/>\r\n        {/* <ul>\r\n          {movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link to = {`/movies/${movie.id}`}>{movie.title ? movie.title : movie.name}</Link>\r\n            </li>\r\n          ))}\r\n        </ul> */}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n// {this.props.match.url}","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import MoviePreview from '../MoviePreview';\r\n\r\nconst MoviesList = ({ movies, location }) => {\r\n  // console.log('match', match.url);\r\n  return (\r\n        <ul>\r\n          {movies.map(movie => (\r\n            <li key={movie.id}>\r\n              {/* <MoviePreview {...movies} /> */}\r\n              <Link to={{\r\n                pathname: `/movies/${movie.id}`,\r\n                state: {\r\n                  from: location,\r\n                }\r\n              }}>\r\n                {movie.title ? movie.title : movie.name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n  );\r\n};\r\n// to = {`${match.url}movies/${movie.id}`}\r\nexport default withRouter(MoviesList);"],"sourceRoot":""}